services:
  reservation-service:
    build: ./reservation-service
    ports:
      - "5003:5003"
    environment:
      DATABASE_URL: "postgresql://postgres:postgres@db:5432/devops_db"
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
    networks:
      - kafka-network
    volumes:
      - ./reservation-service:/app  # Pour que les fichiers du projet soient visibles/modifiables
    depends_on:
      kafka:
        condition: service_healthy
      db:
        condition: service_started
    restart: always

  salle-service:
    build: ./salle-service
    ports:
      - "5002:5002"
    environment:
      DATABASE_URL: "postgresql://postgres:postgres@db:5432/devops_db"
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
    networks:
      - kafka-network
    volumes:
      - ./salle-service:/app
    depends_on:
      kafka:
        condition: service_healthy
      db:
        condition: service_started
    restart: always

  user-service:
    build: ./user-service
    ports:
      - "5001:5001"
    environment:
      DATABASE_URL: "postgresql://postgres:postgres@db:5432/devops_db"
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
    networks:
      - kafka-network
    volumes:
      - ./user-service:/app
    depends_on:
      kafka:
        condition: service_healthy
      db:
        condition: service_started
    restart: always

  db:
    image: postgres:14
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: devops_db
    networks:
      - kafka-network
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data  # Volume persistant pour la base de données
    restart: always

  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - kafka-network

  kafka:
    image: confluentinc/cp-kafka:7.4.0
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "9092"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - kafka-network

networks:
  kafka-network:
    driver: bridge


volumes:
  postgres-data:  # Déclaration du volume persistant pour la DB
